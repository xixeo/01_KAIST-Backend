<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="kr.co.igns.framework.comm.dao.postgre.UserDao">
        
    <!-- 사용자 검색 조건   -->    
    <sql id="search">
   		<if test='domainCd != null and !domainCd.equals("")'>
			AND A.DOMAIN_CD = #{domainCd}
		</if>
		<if test='userId != null and !userId.equals("")'>
			AND A.USER_ID LIKE '%' || #{userId} || '%'
		</if>
		<if test='userNm != null and !userNm.equals("")'>
			AND A.USER_NM LIKE '%' || #{userNm} || '%'
		</if>
	</sql>    
        
    <!-- 사용자정보 조회 -->
    <select id="findByUserId" parameterType="java.lang.Integer"  
    					resultType="kr.co.igns.framework.comm.model.UserCertVO">
		<![CDATA[
        SELECT
        	a.user_id AS userId,
			a.user_pw AS password,
			a.user_nm AS name,
			a.user_role AS roleName
		FROM tb_user_info AS a
		WHERE
			a.uuid = #{uuid}
		]]>
    </select>    
        
    <!-- 사용자정보 조회 -->
    <select id="getUser" parameterType="kr.co.igns.framework.comm.model.UserReqDto" 
    					resultType="kr.co.igns.framework.comm.model.UserVO">
        select 	a.*, 
      <!--      b.asgn_nm,  -->
        		b.code_nm as asgn_nm,
        		c.domain_nm, 
        		d.code_nm as userTypeNm
		from tb_user_info a
			<!-- inner join tb_asgn_info b on a.asgn_cd = b.asgn_cd -->
			left join tb_common_code b on a.domain_cd = b.domain_cd and a.asgn_cd =b.code_cd 
			inner join tb_domain_info c on a.domain_cd = c.domain_cd
			left join tb_common_code d on a.domain_cd = d.domain_cd and a.user_type =d.code_cd 
		where 1=1
		  <include refid="search" />
		order by a.domain_cd, a.user_id
    </select>

	<insert id="createUser" parameterType="kr.co.igns.framework.comm.model.UserVO">
    	INSERT INTO tb_user_info
			(DOMAIN_CD
			, USER_ID
			, USER_NM
			, USER_NM_EN
			, ASGN_CD
			, USER_TYPE
			, NICK_NM
			<!-- , USER_PW
			, USER_TEMP_PW -->
			, EMAIL
			, OFFI_TEL
			, NOTE
			, USE_YN
			, insert_id
			, insert_dt
			)
		VALUES(
			#{domainCd}
			, #{userId}
			, #{userNm}
			, #{userNmEn}
			, #{asgnCd}
			, #{userType}
			, #{nickNm}
			<!-- , #{userPw}
			, #{userTempPw} -->
			, #{email}
			, #{offiTel}
			, #{note}
			, #{useYn}
			, #{insertId}
			, NOW()
			)
    </insert>
    
    <update id="updateUser" parameterType="kr.co.igns.framework.comm.model.UserVO">
    	update tb_user_info
			set USER_NM 		= #{userNm}
				,USER_NM_EN		= #{userNmEn}
				,ASGN_CD		= #{asgnCd}
				,USER_TYPE		= #{userType}
				,NICK_NM		= #{nickNm}
			<!-- 	,USER_PW 		= #{userPw}
				,USER_TEMP_PW	= #{userTempPw} -->
				,EMAIL			= #{email}
				,OFFI_TEL		= #{offiTel}
				,NOTE			= #{note}
				,USE_YN			= #{useYn}
				,update_id		= #{updateId}
				,update_dt		= NOW()
			where DOMAIN_CD 	= #{domainCd} 
			  and USER_ID 		= #{userId}
				
    </update>
    
    <update id="updateUserPass" parameterType="kr.co.igns.framework.comm.model.UserVO">
    	update tb_user_info
			set USER_PW 		= #{userPw}
				,update_id		= #{updateId}
				,update_dt		= NOW()
			where DOMAIN_CD 	= #{domainCd} 
			  and USER_ID 		= #{userId}
				
    </update>
    
    <delete id="deleteUser" parameterType="kr.co.igns.framework.comm.model.UserVO">
    	delete from tb_user_info 
    	where DOMAIN_CD 	= #{domainCd} 
		  and USER_ID 		= #{userId}
    </delete>    
</mapper>
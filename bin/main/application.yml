--- # 공통설정
spring:

  profiles:
    active: dev
    
  messages:
    basename: i18n/exception
    encoding: UTF-8
  file:
    upload-dir: D:/uploads/ # All files uploaded through the REST API will be stored in this directory
    max-size: 10737418240 # 5242880 # 1024 * 1024 * 5
#  jpa: #JPA 설정
#    generate-ddl: true
#    properties:
#      hibernate: #방언 설정
#        #하이버네이트가 실행하는 모든 SQL문을 콘솔로 출력
#        show_sql: true
#        #콘솔에 출력되는 JPA 실행 쿼리를 가독성있게 표현
#        format_sql: true
#        #디버깅이 용이하도록 SQL문 이외에 추가적인 정보를 출력
#        use_sql_comments: true
#        #서버 시작시 Entity와 실제 Table을 비교하여 변경된 내용을 반영하고, 없으면 새로 생성
#        ddl_auto: create #none #update   
#  mvc: #JSP 설정
#    view:
#      prefix: /WEB-INF/jsp/
#      suffix: .jsp
#  devtools: #JSP 파일 서버 재시작 없이 바로 적용하기
#    livereload:
#      enabled: true
  
restTemplate:
  factory:
    readTimeout: 5000
    connectTimeout: 3000
  httpClient:
    maxConnTotal: 100
    maxConnPerRoute: 5    
##########################################################################  
--- #개발(dev)
server: #서버설정
  port: 9000
  
spring:
  profiles: dev
  redis:
    host: 127.0.0.1
    port: 6379
  cache:
    type: redis
  datasource:  #DB 접속정보 oracle 
    hikari:
      first:
        driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
        #jdbc-url: jdbc:log4jdbc:postgresql://localhost:5432/postgres
        #username: postgres
        #password: 1
        jdbc-url: jdbc:log4jdbc:postgresql://postgre_kaist/postgres
        #jdbc-url: jdbc:log4jdbc:postgresql://143.248.100.60:5433/postgres
        #jdbc-url: jdbc:log4jdbc:postgresql://rnd.i-gns.co.kr:5433/postgres
        #username: igns
        #password: igns
        username: itc
        password: itcbroker
        type: com.zaxxer.hikari.HikariDataSource
      #second:
        #driver-class-name: oracle.jdbc.driver.OracleDriver
        #jdbc-url: jdbc:oracle:thin:@DEV.I-GNS.CO.KR:21521/ORCL
        #username: IGMES
        #password: igmes!
        #type: com.zaxxer.hikari.HikariDataSource
      #second:
      #  driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
      #  jdbc-url: jdbc:sqlserver://192.168.3.201;DatabaseName=holdings_db
      #  username: dev_erp
      #  password: 1234
      #  type: com.zaxxer.hikari.HikariDataSource
      #second:
      #  jdbc-url: jdbc:mysql://192.168.3.201:3306/igns_test?serverTimezone=UTC&characterEncoding=UTF-8&allowMultiQueries=true
      #  username: dev_tloms
      #  password: 1234
      #  driver-class-name: com.mysql.cj.jdbc.Driver
      #  type: com.zaxxer.hikari.HikariDataSource
  influxdb: 
    #url: http://localhost:8086
    # url: http://192.168.3.206:8086
    #url: http://rnd.i-gns.co.kr:8087
    url: http://influxdb:8086
    #username: admin
    #password: admin1234
    username: itc
    password: itcbroker
    database: itc
    retention-policy: autogen
    #connect-timeout: 10
    #read-timeout: 30
    #write-timeout: 10  
--- # sjun09162@gmail.com / mzmgfztxpdvqlllv
logging:
  config: classpath:log4j/log4j2_dev.yml
  level:
    jdbc:
     connection: OFF # open close 이벤트를 로그
     sqlonly: OFF # SQL문만을 로그로 남기며, PreparedStatement일 경우 관련된 argument 값으로 대체된 SQL문이 보여짐
     audit: OFF # ResultSet을 제외한 모든 JDBC 호출 정보 로그. 많은 양의 로그가 생성되므로 특별히 JDBC 문제를 추적해야 할 필요가 있는 경우를 제외하고는 사용을 권장하지 않음
     resultset: OFF # ResultSet을 포함한 모든 JDBC 호출 정보
     resultsettable: OFF # SQL 결과 조회된 데이터의 table
    #sqltiming: INFO # SQL문과 해당 SQL을 실행시키는데 수행된 시간 정보(milliseconds)
    
##########################################################################
--- #운영(prod)
server: #서버설정
  port: 9000
  
spring:
  profiles: prod
  datasource:  #DB 접속정보 oracle 
    hikari:
      first:
        driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
        #jdbc-url: jdbc:log4jdbc:postgresql://15.164.90.9:5432/postgres
        jdbc-url: jdbc:log4jdbc:postgresql://postgre_kaist/postgres
        #jdbc-url: jdbc:log4jdbc:postgresql://143.248.100.60:5433/postgres
        username: igns
        password: igns
        type: com.zaxxer.hikari.HikariDataSource
logging:
  config: classpath:log4j/log4j2_dev.yml
  level:
    jdbc:
     connection: OFF # open close 이벤트를 로그
     sqlonly: OFF # SQL문만을 로그로 남기며, PreparedStatement일 경우 관련된 argument 값으로 대체된 SQL문이 보여짐
     audit: OFF # ResultSet을 제외한 모든 JDBC 호출 정보 로그. 많은 양의 로그가 생성되므로 특별히 JDBC 문제를 추적해야 할 필요가 있는 경우를 제외하고는 사용을 권장하지 않음
     resultset: OFF # ResultSet을 포함한 모든 JDBC 호출 정보
     resultsettable: OFF # SQL 결과 조회된 데이터의 table
    #sqltiming: INFO # SQL문과 해당 SQL을 실행시키는데 수행된 시간 정보(milliseconds)